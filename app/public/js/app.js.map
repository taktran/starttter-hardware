{"version":3,"sources":["app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["(function() {\n  \"use strict\";\n\n  var urlPrefix = \"https://api.spark.io/v1/devices/\" + CONFIG.sparkCoreId;\n  var accessToken = \"access_token=\" + CONFIG.accessToken;\n  var stateUrl = urlPrefix + \"/state?\" + accessToken;\n  var sparkEventsUrl = urlPrefix + \"/events/rgb?\" + accessToken;\n\n  function setCoreColour(colorObj) {\n    var rgbStr = colorObj.r + \",\" + colorObj.g + \",\" + colorObj.b;\n    $(\".rgb-color\").css(\"background-color\", \"rgb(\" + rgbStr + \")\");\n  }\n\n  // Get initial colour\n  $.get(stateUrl)\n    .done(function(data) {\n      var result = data[\"result\"];\n\n      try {\n        var colorObj = JSON.parse(result);\n        setCoreColour(colorObj);\n      } catch(err) {\n        console.log(\"Parse error\", result, err);\n      }\n    })\n    .fail(function(err) {\n      console.log(\"Get state error\", err);\n    });\n\n  // Subscribe to change events\n  var sparkEvents = new EventSource(sparkEventsUrl);\n  sparkEvents.onmessage = function(e) {\n    console.log(e);\n  };\n\n  sparkEvents.onerror = function(e) {\n    console.log(\"sparkEvents failed\", e);\n  };\n\n})();"],"sourceRoot":"/source/"}